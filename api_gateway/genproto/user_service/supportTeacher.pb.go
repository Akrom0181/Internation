// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: supportTeacher.proto

package user_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptySTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptySTeacher) Reset() {
	*x = EmptySTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supportTeacher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptySTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptySTeacher) ProtoMessage() {}

func (x *EmptySTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_supportTeacher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptySTeacher.ProtoReflect.Descriptor instead.
func (*EmptySTeacher) Descriptor() ([]byte, []int) {
	return file_supportTeacher_proto_rawDescGZIP(), []int{0}
}

type SupportTeacherPrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SupportTeacherPrimaryKey) Reset() {
	*x = SupportTeacherPrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supportTeacher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportTeacherPrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportTeacherPrimaryKey) ProtoMessage() {}

func (x *SupportTeacherPrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_supportTeacher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportTeacherPrimaryKey.ProtoReflect.Descriptor instead.
func (*SupportTeacherPrimaryKey) Descriptor() ([]byte, []int) {
	return file_supportTeacher_proto_rawDescGZIP(), []int{1}
}

func (x *SupportTeacherPrimaryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateSupportTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login             string  `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Fullname          string  `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone             string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Salary            int32   `protobuf:"varint,5,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,6,opt,name=ieltsScore,proto3" json:"ieltsScore,omitempty"`
	IeltsAttemptCount int32   `protobuf:"varint,7,opt,name=ieltsAttemptCount,proto3" json:"ieltsAttemptCount,omitempty"`
	BranchId          string  `protobuf:"bytes,8,opt,name=branchId,proto3" json:"branchId,omitempty"`
}

func (x *CreateSupportTeacher) Reset() {
	*x = CreateSupportTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supportTeacher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSupportTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSupportTeacher) ProtoMessage() {}

func (x *CreateSupportTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_supportTeacher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSupportTeacher.ProtoReflect.Descriptor instead.
func (*CreateSupportTeacher) Descriptor() ([]byte, []int) {
	return file_supportTeacher_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSupportTeacher) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *CreateSupportTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *CreateSupportTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateSupportTeacher) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateSupportTeacher) GetSalary() int32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *CreateSupportTeacher) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *CreateSupportTeacher) GetIeltsAttemptCount() int32 {
	if x != nil {
		return x.IeltsAttemptCount
	}
	return 0
}

func (x *CreateSupportTeacher) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type SupportTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login             string  `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Fullname          string  `protobuf:"bytes,3,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone             string  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Salary            int32   `protobuf:"varint,6,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,7,opt,name=ieltsScore,proto3" json:"ieltsScore,omitempty"`
	IeltsAttemptCount int32   `protobuf:"varint,8,opt,name=ieltsAttemptCount,proto3" json:"ieltsAttemptCount,omitempty"`
	BranchId          string  `protobuf:"bytes,9,opt,name=branchId,proto3" json:"branchId,omitempty"`
	CreatedAt         string  `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string  `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt         int32   `protobuf:"varint,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *SupportTeacher) Reset() {
	*x = SupportTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supportTeacher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportTeacher) ProtoMessage() {}

func (x *SupportTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_supportTeacher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportTeacher.ProtoReflect.Descriptor instead.
func (*SupportTeacher) Descriptor() ([]byte, []int) {
	return file_supportTeacher_proto_rawDescGZIP(), []int{3}
}

func (x *SupportTeacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SupportTeacher) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *SupportTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *SupportTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SupportTeacher) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SupportTeacher) GetSalary() int32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *SupportTeacher) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *SupportTeacher) GetIeltsAttemptCount() int32 {
	if x != nil {
		return x.IeltsAttemptCount
	}
	return 0
}

func (x *SupportTeacher) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *SupportTeacher) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SupportTeacher) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SupportTeacher) GetDeletedAt() int32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type UpdateSupportTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login             string  `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Fullname          string  `protobuf:"bytes,3,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone             string  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Salary            int32   `protobuf:"varint,6,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,7,opt,name=ieltsScore,proto3" json:"ieltsScore,omitempty"`
	IeltsAttemptCount int32   `protobuf:"varint,8,opt,name=ieltsAttemptCount,proto3" json:"ieltsAttemptCount,omitempty"`
	BranchId          string  `protobuf:"bytes,9,opt,name=branchId,proto3" json:"branchId,omitempty"`
}

func (x *UpdateSupportTeacher) Reset() {
	*x = UpdateSupportTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supportTeacher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSupportTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSupportTeacher) ProtoMessage() {}

func (x *UpdateSupportTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_supportTeacher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSupportTeacher.ProtoReflect.Descriptor instead.
func (*UpdateSupportTeacher) Descriptor() ([]byte, []int) {
	return file_supportTeacher_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSupportTeacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSupportTeacher) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *UpdateSupportTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *UpdateSupportTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateSupportTeacher) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateSupportTeacher) GetSalary() int32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *UpdateSupportTeacher) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *UpdateSupportTeacher) GetIeltsAttemptCount() int32 {
	if x != nil {
		return x.IeltsAttemptCount
	}
	return 0
}

func (x *UpdateSupportTeacher) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type GetSupportTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login             string  `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Fullname          string  `protobuf:"bytes,3,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone             string  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Salary            int32   `protobuf:"varint,6,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,7,opt,name=ieltsScore,proto3" json:"ieltsScore,omitempty"`
	IeltsAttemptCount int32   `protobuf:"varint,8,opt,name=ieltsAttemptCount,proto3" json:"ieltsAttemptCount,omitempty"`
	BranchId          string  `protobuf:"bytes,9,opt,name=branchId,proto3" json:"branchId,omitempty"`
	CreatedAt         string  `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string  `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt         int32   `protobuf:"varint,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *GetSupportTeacher) Reset() {
	*x = GetSupportTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supportTeacher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSupportTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportTeacher) ProtoMessage() {}

func (x *GetSupportTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_supportTeacher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportTeacher.ProtoReflect.Descriptor instead.
func (*GetSupportTeacher) Descriptor() ([]byte, []int) {
	return file_supportTeacher_proto_rawDescGZIP(), []int{5}
}

func (x *GetSupportTeacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSupportTeacher) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *GetSupportTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *GetSupportTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetSupportTeacher) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *GetSupportTeacher) GetSalary() int32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *GetSupportTeacher) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *GetSupportTeacher) GetIeltsAttemptCount() int32 {
	if x != nil {
		return x.IeltsAttemptCount
	}
	return 0
}

func (x *GetSupportTeacher) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetSupportTeacher) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetSupportTeacher) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetSupportTeacher) GetDeletedAt() int32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type GetListSupportTeacherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit  uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetListSupportTeacherRequest) Reset() {
	*x = GetListSupportTeacherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supportTeacher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListSupportTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListSupportTeacherRequest) ProtoMessage() {}

func (x *GetListSupportTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_supportTeacher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListSupportTeacherRequest.ProtoReflect.Descriptor instead.
func (*GetListSupportTeacherRequest) Descriptor() ([]byte, []int) {
	return file_supportTeacher_proto_rawDescGZIP(), []int{6}
}

func (x *GetListSupportTeacherRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListSupportTeacherRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListSupportTeacherRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetListSupportTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count           int64             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	SupportTeachers []*SupportTeacher `protobuf:"bytes,2,rep,name=supportTeachers,proto3" json:"supportTeachers,omitempty"`
}

func (x *GetListSupportTeacherResponse) Reset() {
	*x = GetListSupportTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supportTeacher_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListSupportTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListSupportTeacherResponse) ProtoMessage() {}

func (x *GetListSupportTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_supportTeacher_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListSupportTeacherResponse.ProtoReflect.Descriptor instead.
func (*GetListSupportTeacherResponse) Descriptor() ([]byte, []int) {
	return file_supportTeacher_proto_rawDescGZIP(), []int{7}
}

func (x *GetListSupportTeacherResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListSupportTeacherResponse) GetSupportTeachers() []*SupportTeacher {
	if x != nil {
		return x.SupportTeachers
	}
	return nil
}

type GetReportSupportTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login             string  `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Fullname          string  `protobuf:"bytes,3,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone             string  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Salary            int64   `protobuf:"varint,6,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore        float32 `protobuf:"fixed32,7,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttemptCount int32   `protobuf:"varint,8,opt,name=ielts_attempt_count,json=ieltsAttemptCount,proto3" json:"ielts_attempt_count,omitempty"`
	BranchId          string  `protobuf:"bytes,9,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	CreatedAt         string  `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string  `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt         string  `protobuf:"bytes,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Totalsum          string  `protobuf:"bytes,13,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
}

func (x *GetReportSupportTeacherResponse) Reset() {
	*x = GetReportSupportTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supportTeacher_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportSupportTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportSupportTeacherResponse) ProtoMessage() {}

func (x *GetReportSupportTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_supportTeacher_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportSupportTeacherResponse.ProtoReflect.Descriptor instead.
func (*GetReportSupportTeacherResponse) Descriptor() ([]byte, []int) {
	return file_supportTeacher_proto_rawDescGZIP(), []int{8}
}

func (x *GetReportSupportTeacherResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetSalary() int64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *GetReportSupportTeacherResponse) GetIeltsScore() float32 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *GetReportSupportTeacherResponse) GetIeltsAttemptCount() int32 {
	if x != nil {
		return x.IeltsAttemptCount
	}
	return 0
}

func (x *GetReportSupportTeacherResponse) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *GetReportSupportTeacherResponse) GetTotalsum() string {
	if x != nil {
		return x.Totalsum
	}
	return ""
}

type GetReportListSupportTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count              int64                              `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	GetSupportTeachers []*GetReportSupportTeacherResponse `protobuf:"bytes,2,rep,name=GetSupportTeachers,proto3" json:"GetSupportTeachers,omitempty"`
}

func (x *GetReportListSupportTeacherResponse) Reset() {
	*x = GetReportListSupportTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supportTeacher_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportListSupportTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportListSupportTeacherResponse) ProtoMessage() {}

func (x *GetReportListSupportTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_supportTeacher_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportListSupportTeacherResponse.ProtoReflect.Descriptor instead.
func (*GetReportListSupportTeacherResponse) Descriptor() ([]byte, []int) {
	return file_supportTeacher_proto_rawDescGZIP(), []int{9}
}

func (x *GetReportListSupportTeacherResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetReportListSupportTeacherResponse) GetGetSupportTeachers() []*GetReportSupportTeacherResponse {
	if x != nil {
		return x.GetSupportTeachers
	}
	return nil
}

type GetReportListSupportTeacherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetReportListSupportTeacherRequest) Reset() {
	*x = GetReportListSupportTeacherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supportTeacher_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReportListSupportTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportListSupportTeacherRequest) ProtoMessage() {}

func (x *GetReportListSupportTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_supportTeacher_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportListSupportTeacherRequest.ProtoReflect.Descriptor instead.
func (*GetReportListSupportTeacherRequest) Descriptor() ([]byte, []int) {
	return file_supportTeacher_proto_rawDescGZIP(), []int{10}
}

func (x *GetReportListSupportTeacherRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetReportListSupportTeacherRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetReportListSupportTeacherRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

var File_supportTeacher_proto protoreflect.FileDescriptor

var file_supportTeacher_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x18, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xfc, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64,
	0x22, 0xe3, 0x02, 0x0a, 0x0e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8c, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0xe6, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x69, 0x65, 0x6c,
	0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x65, 0x6c, 0x74, 0x73,
	0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x60,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x22, 0x7d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x0f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x22,
	0x94, 0x03, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x22, 0x9a, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x73, 0x22, 0x66, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x32, 0xb5, 0x04, 0x0a, 0x15,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x1b, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x53, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_supportTeacher_proto_rawDescOnce sync.Once
	file_supportTeacher_proto_rawDescData = file_supportTeacher_proto_rawDesc
)

func file_supportTeacher_proto_rawDescGZIP() []byte {
	file_supportTeacher_proto_rawDescOnce.Do(func() {
		file_supportTeacher_proto_rawDescData = protoimpl.X.CompressGZIP(file_supportTeacher_proto_rawDescData)
	})
	return file_supportTeacher_proto_rawDescData
}

var file_supportTeacher_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_supportTeacher_proto_goTypes = []interface{}{
	(*EmptySTeacher)(nil),                       // 0: user_service.EmptySTeacher
	(*SupportTeacherPrimaryKey)(nil),            // 1: user_service.SupportTeacherPrimaryKey
	(*CreateSupportTeacher)(nil),                // 2: user_service.CreateSupportTeacher
	(*SupportTeacher)(nil),                      // 3: user_service.SupportTeacher
	(*UpdateSupportTeacher)(nil),                // 4: user_service.UpdateSupportTeacher
	(*GetSupportTeacher)(nil),                   // 5: user_service.GetSupportTeacher
	(*GetListSupportTeacherRequest)(nil),        // 6: user_service.GetListSupportTeacherRequest
	(*GetListSupportTeacherResponse)(nil),       // 7: user_service.GetListSupportTeacherResponse
	(*GetReportSupportTeacherResponse)(nil),     // 8: user_service.GetReportSupportTeacherResponse
	(*GetReportListSupportTeacherResponse)(nil), // 9: user_service.GetReportListSupportTeacherResponse
	(*GetReportListSupportTeacherRequest)(nil),  // 10: user_service.GetReportListSupportTeacherRequest
}
var file_supportTeacher_proto_depIdxs = []int32{
	3,  // 0: user_service.GetListSupportTeacherResponse.supportTeachers:type_name -> user_service.SupportTeacher
	8,  // 1: user_service.GetReportListSupportTeacherResponse.GetSupportTeachers:type_name -> user_service.GetReportSupportTeacherResponse
	2,  // 2: user_service.SupportTeacherService.Create:input_type -> user_service.CreateSupportTeacher
	1,  // 3: user_service.SupportTeacherService.GetByID:input_type -> user_service.SupportTeacherPrimaryKey
	6,  // 4: user_service.SupportTeacherService.GetList:input_type -> user_service.GetListSupportTeacherRequest
	4,  // 5: user_service.SupportTeacherService.Update:input_type -> user_service.UpdateSupportTeacher
	1,  // 6: user_service.SupportTeacherService.Delete:input_type -> user_service.SupportTeacherPrimaryKey
	10, // 7: user_service.SupportTeacherService.GetReportList:input_type -> user_service.GetReportListSupportTeacherRequest
	3,  // 8: user_service.SupportTeacherService.Create:output_type -> user_service.SupportTeacher
	3,  // 9: user_service.SupportTeacherService.GetByID:output_type -> user_service.SupportTeacher
	7,  // 10: user_service.SupportTeacherService.GetList:output_type -> user_service.GetListSupportTeacherResponse
	3,  // 11: user_service.SupportTeacherService.Update:output_type -> user_service.SupportTeacher
	0,  // 12: user_service.SupportTeacherService.Delete:output_type -> user_service.EmptySTeacher
	9,  // 13: user_service.SupportTeacherService.GetReportList:output_type -> user_service.GetReportListSupportTeacherResponse
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_supportTeacher_proto_init() }
func file_supportTeacher_proto_init() {
	if File_supportTeacher_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_supportTeacher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptySTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supportTeacher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportTeacherPrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supportTeacher_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSupportTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supportTeacher_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supportTeacher_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSupportTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supportTeacher_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSupportTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supportTeacher_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListSupportTeacherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supportTeacher_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListSupportTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supportTeacher_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportSupportTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supportTeacher_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportListSupportTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supportTeacher_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReportListSupportTeacherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_supportTeacher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_supportTeacher_proto_goTypes,
		DependencyIndexes: file_supportTeacher_proto_depIdxs,
		MessageInfos:      file_supportTeacher_proto_msgTypes,
	}.Build()
	File_supportTeacher_proto = out.File
	file_supportTeacher_proto_rawDesc = nil
	file_supportTeacher_proto_goTypes = nil
	file_supportTeacher_proto_depIdxs = nil
}
