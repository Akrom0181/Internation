definitions:
  models.ResponseError:
    properties:
      error: {}
    type: object
  schedule_service.CreateEvent:
    properties:
      assignStudent:
        type: string
      branchId:
        type: string
      date:
        type: string
      startTime:
        type: string
      topic:
        type: string
    type: object
  schedule_service.CreateEventStudent:
    properties:
      eventId:
        type: string
      studentId:
        type: string
    type: object
  schedule_service.CreateGroup:
    properties:
      branchId:
        type: string
      suppportTeacherId:
        type: string
      teacherId:
        type: string
      type:
        type: string
    type: object
  schedule_service.CreateJournal:
    properties:
      fromDate:
        type: string
      groupId:
        type: string
      studentsCount:
        type: integer
      toDate:
        type: string
    type: object
  schedule_service.CreateSchedule:
    properties:
      date:
        type: string
      endTime:
        type: string
      journalId:
        type: string
      lesson:
        type: string
      startTime:
        type: string
    type: object
  schedule_service.CreateStudentPayment:
    properties:
      administration_id:
        type: string
      group_id:
        type: string
      paidsum:
        type: integer
      student_id:
        type: string
    type: object
  schedule_service.CreateStudentTask:
    properties:
      studentId:
        type: string
      taskId:
        type: string
    type: object
  schedule_service.CreateTask:
    properties:
      deadlineDate:
        type: string
      deadlineTime:
        type: string
      label:
        type: string
      scheduleId:
        type: string
      score:
        type: integer
    type: object
  schedule_service.EmptyEvent:
    type: object
  schedule_service.EmptyEventStudent:
    type: object
  schedule_service.EmptyGroup:
    type: object
  schedule_service.EmptyJournal:
    type: object
  schedule_service.EmptySchedule:
    type: object
  schedule_service.EmptyStudentPayment:
    type: object
  schedule_service.EmptyStudentTask:
    type: object
  schedule_service.EmptyTask:
    type: object
  schedule_service.Event:
    properties:
      assignStudent:
        type: string
      branchId:
        type: string
      created_at:
        type: string
      date:
        type: string
      deleted_at:
        type: integer
      id:
        type: string
      startTime:
        type: string
      topic:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.EventStudent:
    properties:
      created_at:
        type: string
      deleted_at:
        type: integer
      eventId:
        type: string
      id:
        type: string
      studentId:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.GetEvent:
    properties:
      assignStudent:
        type: string
      branchId:
        type: string
      created_at:
        type: string
      date:
        type: string
      deleted_at:
        type: integer
      id:
        type: string
      startTime:
        type: string
      topic:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.GetEventStudent:
    properties:
      created_at:
        type: string
      deleted_at:
        type: integer
      eventId:
        type: string
      id:
        type: string
      studentId:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.GetGroup:
    properties:
      branchId:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      id:
        type: string
      suppportTeacherId:
        type: string
      teacherId:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.GetJournal:
    properties:
      created_at:
        type: string
      deleted_at:
        type: integer
      fromDate:
        type: string
      groupId:
        type: string
      id:
        type: string
      studentsCount:
        type: integer
      toDate:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.GetListEventResponse:
    properties:
      count:
        type: integer
      events:
        items:
          $ref: '#/definitions/schedule_service.Event'
        type: array
    type: object
  schedule_service.GetListEventStudentResponse:
    properties:
      count:
        type: integer
      eventStudents:
        items:
          $ref: '#/definitions/schedule_service.EventStudent'
        type: array
    type: object
  schedule_service.GetListGroupResponse:
    properties:
      count:
        type: integer
      groups:
        items:
          $ref: '#/definitions/schedule_service.Group'
        type: array
    type: object
  schedule_service.GetListJournalResponse:
    properties:
      count:
        type: integer
      journals:
        items:
          $ref: '#/definitions/schedule_service.Journal'
        type: array
    type: object
  schedule_service.GetListScheduleResponse:
    properties:
      count:
        type: integer
      schedules:
        items:
          $ref: '#/definitions/schedule_service.Schedule'
        type: array
    type: object
  schedule_service.GetListStudentPaymentResponse:
    properties:
      count:
        type: integer
      student_payments:
        items:
          $ref: '#/definitions/schedule_service.StudentPayment'
        type: array
    type: object
  schedule_service.GetListStudentTaskResponse:
    properties:
      count:
        type: integer
      studentTasks:
        items:
          $ref: '#/definitions/schedule_service.StudentTask'
        type: array
    type: object
  schedule_service.GetListTaskResponse:
    properties:
      count:
        type: integer
      tasks:
        items:
          $ref: '#/definitions/schedule_service.Task'
        type: array
    type: object
  schedule_service.GetSchedule:
    properties:
      created_at:
        type: string
      date:
        type: string
      deleted_at:
        type: integer
      endTime:
        type: string
      id:
        type: string
      journalId:
        type: string
      lesson:
        type: string
      startTime:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.GetStudentPayment:
    properties:
      administration_id:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      group_id:
        type: string
      id:
        type: string
      paidsum:
        type: integer
      student_id:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.GetStudentTask:
    properties:
      created_at:
        type: string
      deleted_at:
        type: integer
      id:
        type: string
      studentId:
        type: string
      taskId:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.GetStudentWithEventsResponse:
    properties:
      events:
        items:
          $ref: '#/definitions/schedule_service.GetEventStudent'
        type: array
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  schedule_service.GetTask:
    properties:
      created_at:
        type: string
      deadlineDate:
        type: string
      deadlineTime:
        type: string
      deleted_at:
        type: integer
      id:
        type: string
      label:
        type: string
      scheduleId:
        type: string
      score:
        type: integer
      updated_at:
        type: string
    type: object
  schedule_service.Group:
    properties:
      branchId:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      id:
        type: string
      suppportTeacherId:
        type: string
      teacherId:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.Journal:
    properties:
      created_at:
        type: string
      deleted_at:
        type: integer
      fromDate:
        type: string
      groupId:
        type: string
      id:
        type: string
      studentsCount:
        type: integer
      toDate:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.Schedule:
    properties:
      created_at:
        type: string
      date:
        type: string
      deleted_at:
        type: integer
      endTime:
        type: string
      id:
        type: string
      journalId:
        type: string
      lesson:
        type: string
      startTime:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.StudentPayment:
    properties:
      administration_id:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      group_id:
        type: string
      id:
        type: string
      paidsum:
        type: integer
      student_id:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.StudentTask:
    properties:
      created_at:
        type: string
      deleted_at:
        type: integer
      id:
        type: string
      studentId:
        type: string
      taskId:
        type: string
      updated_at:
        type: string
    type: object
  schedule_service.Task:
    properties:
      created_at:
        type: string
      deadlineDate:
        type: string
      deadlineTime:
        type: string
      deleted_at:
        type: integer
      id:
        type: string
      label:
        type: string
      scheduleId:
        type: string
      score:
        type: integer
      updated_at:
        type: string
    type: object
  schedule_service.UpdateEvent:
    properties:
      assignStudent:
        type: string
      branchId:
        type: string
      date:
        type: string
      id:
        type: string
      startTime:
        type: string
      topic:
        type: string
    type: object
  schedule_service.UpdateEventStudent:
    properties:
      eventId:
        type: string
      id:
        type: string
      studentId:
        type: string
    type: object
  schedule_service.UpdateGroup:
    properties:
      branchId:
        type: string
      id:
        type: string
      suppportTeacherId:
        type: string
      teacherId:
        type: string
      type:
        type: string
    type: object
  schedule_service.UpdateJournal:
    properties:
      fromDate:
        type: string
      groupId:
        type: string
      id:
        type: string
      studentsCount:
        type: integer
      toDate:
        type: string
    type: object
  schedule_service.UpdateSchedule:
    properties:
      date:
        type: string
      endTime:
        type: string
      id:
        type: string
      journalId:
        type: string
      lesson:
        type: string
      startTime:
        type: string
    type: object
  schedule_service.UpdateStudentPayment:
    properties:
      administration_id:
        type: string
      group_id:
        type: string
      id:
        type: string
      paidsum:
        type: integer
      student_id:
        type: string
    type: object
  schedule_service.UpdateStudentTask:
    properties:
      id:
        type: string
      studentId:
        type: string
      taskId:
        type: string
    type: object
  schedule_service.UpdateTask:
    properties:
      deadlineDate:
        type: string
      deadlineTime:
        type: string
      id:
        type: string
      label:
        type: string
      scheduleId:
        type: string
      score:
        type: integer
    type: object
  user_service.Administration:
    properties:
      branchId:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      fullname:
        type: string
      id:
        type: string
      ieltsScore:
        type: number
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: integer
      updated_at:
        type: string
    type: object
  user_service.Branch:
    properties:
      address:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      id:
        type: string
      name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
  user_service.CreateAdministration:
    properties:
      branchId:
        type: string
      fullname:
        type: string
      ieltsScore:
        type: number
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: integer
    type: object
  user_service.CreateBranch:
    properties:
      address:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  user_service.CreateManager:
    properties:
      branchId:
        type: string
      fullname:
        type: string
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: integer
    type: object
  user_service.CreateStudent:
    properties:
      branchId:
        type: string
      fullname:
        type: string
      groupName:
        type: string
      login:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
  user_service.CreateSupportTeacher:
    properties:
      branchId:
        type: string
      fullname:
        type: string
      ieltsAttemptCount:
        type: integer
      ieltsScore:
        type: number
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: integer
    type: object
  user_service.CreateTeacher:
    properties:
      branchId:
        type: string
      fullname:
        type: string
      ieltsAttemptCount:
        type: integer
      ieltsScore:
        type: number
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: number
      supportTeacherId:
        type: string
    type: object
  user_service.EmptyAdmin:
    type: object
  user_service.EmptyBranch:
    type: object
  user_service.EmptyManager:
    type: object
  user_service.EmptySTeacher:
    type: object
  user_service.EmptyTeacher:
    type: object
  user_service.GetListAdministrationResponse:
    properties:
      administrations:
        items:
          $ref: '#/definitions/user_service.Administration'
        type: array
      count:
        type: integer
    type: object
  user_service.GetListBranchResponse:
    properties:
      branches:
        items:
          $ref: '#/definitions/user_service.Branch'
        type: array
      count:
        type: integer
    type: object
  user_service.GetListManagerResponse:
    properties:
      count:
        type: integer
      managers:
        items:
          $ref: '#/definitions/user_service.Manager'
        type: array
    type: object
  user_service.GetListStudentResponse:
    properties:
      count:
        type: integer
      students:
        items:
          $ref: '#/definitions/user_service.Student'
        type: array
    type: object
  user_service.GetListSupportTeacherResponse:
    properties:
      count:
        type: integer
      supportTeachers:
        items:
          $ref: '#/definitions/user_service.SupportTeacher'
        type: array
    type: object
  user_service.GetListTeacherResponse:
    properties:
      count:
        type: integer
      teachers:
        items:
          $ref: '#/definitions/user_service.Teacher'
        type: array
    type: object
  user_service.GetReportAdministrationResponse:
    properties:
      branch_id:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      fullname:
        type: string
      id:
        type: string
      ielts_score:
        type: number
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: integer
      totalsum:
        type: string
      updated_at:
        type: string
    type: object
  user_service.GetReportListTeacherResponse:
    properties:
      Count:
        type: integer
      GetTeacherResponse:
        items:
          $ref: '#/definitions/user_service.GetReportTeacherResponse'
        type: array
    type: object
  user_service.GetReportTeacherResponse:
    properties:
      branch_id:
        type: string
      created_at:
        type: string
      fullname:
        type: string
      id:
        type: string
      ielts_attempt_count:
        type: integer
      ielts_score:
        type: number
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: integer
      support_teacher_id:
        type: string
      totalsum:
        type: string
      updated_at:
        type: string
    type: object
  user_service.LoginPasswors:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  user_service.Manager:
    properties:
      branchId:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      fullname:
        type: string
      id:
        type: string
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: integer
      updated_at:
        type: string
    type: object
  user_service.Student:
    properties:
      branchId:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      fullname:
        type: string
      groupName:
        type: string
      id:
        type: string
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
  user_service.StudentEmpty:
    type: object
  user_service.SupportTeacher:
    properties:
      branchId:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      fullname:
        type: string
      id:
        type: string
      ieltsAttemptCount:
        type: integer
      ieltsScore:
        type: number
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: integer
      updated_at:
        type: string
    type: object
  user_service.Teacher:
    properties:
      branchId:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      fullname:
        type: string
      id:
        type: string
      ieltsAttemptCount:
        type: integer
      ieltsScore:
        type: number
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: number
      supportTeacherId:
        type: string
      updated_at:
        type: string
    type: object
  user_service.Token:
    properties:
      AccessToken:
        type: string
      RefreshToken:
        type: string
    type: object
  user_service.UpdateAdministration:
    properties:
      branchId:
        type: string
      fullname:
        type: string
      id:
        type: string
      ieltsScore:
        type: number
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: integer
    type: object
  user_service.UpdateBranch:
    properties:
      address:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  user_service.UpdateManager:
    properties:
      branchId:
        type: string
      fullname:
        type: string
      id:
        type: string
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: integer
    type: object
  user_service.UpdateStudent:
    properties:
      branchId:
        type: string
      fullname:
        type: string
      groupName:
        type: string
      id:
        type: string
      login:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
  user_service.UpdateSupportTeacher:
    properties:
      branchId:
        type: string
      fullname:
        type: string
      id:
        type: string
      ieltsAttemptCount:
        type: integer
      ieltsScore:
        type: number
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: integer
    type: object
  user_service.UpdateTeacher:
    properties:
      branchId:
        type: string
      fullname:
        type: string
      id:
        type: string
      ieltsAttemptCount:
        type: integer
      ieltsScore:
        type: number
      login:
        type: string
      password:
        type: string
      phone:
        type: string
      salary:
        type: number
      supportTeacherId:
        type: string
    type: object
info:
  contact: {}
paths:
  /AdministrationReportList:
    get:
      consumes:
      - application/json
      description: API for getting a list of administrations
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: string
      - description: Page
        in: query
        name: page
        required: true
        type: string
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.GetReportAdministrationResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get List of Administrations
      tags:
      - report
  /CreateAdministration:
    post:
      consumes:
      - application/json
      description: API for creating administration
      parameters:
      - description: administration
        in: body
        name: administration
        required: true
        schema:
          $ref: '#/definitions/user_service.CreateAdministration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.CreateAdministration'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create administration
      tags:
      - administration
  /CreateBranch:
    post:
      consumes:
      - application/json
      description: API for creating branch
      parameters:
      - description: Branch
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/user_service.CreateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.CreateBranch'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create branch
      tags:
      - branch
  /CreateEvent:
    post:
      consumes:
      - application/json
      description: API for creating event
      parameters:
      - description: Event
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/schedule_service.CreateEvent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.CreateEvent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create event
      tags:
      - event
  /CreateEventStudent:
    post:
      consumes:
      - application/json
      description: API for creating event student
      parameters:
      - description: Event Student
        in: body
        name: event_student
        required: true
        schema:
          $ref: '#/definitions/schedule_service.CreateEventStudent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.CreateEventStudent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create event student
      tags:
      - event_student
  /CreateGroup:
    post:
      consumes:
      - application/json
      description: API for creating group
      parameters:
      - description: Group
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/schedule_service.CreateGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.CreateGroup'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create group
      tags:
      - group
  /CreateJournal:
    post:
      consumes:
      - application/json
      description: API for creating journal
      parameters:
      - description: Journal
        in: body
        name: journal
        required: true
        schema:
          $ref: '#/definitions/schedule_service.CreateJournal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetJournal'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create journal
      tags:
      - journal
  /CreateManager:
    post:
      consumes:
      - application/json
      description: API for creating manager
      parameters:
      - description: Manager
        in: body
        name: manager
        required: true
        schema:
          $ref: '#/definitions/user_service.CreateManager'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.CreateManager'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create manager
      tags:
      - manager
  /CreateSchedule:
    post:
      consumes:
      - application/json
      description: API for creating schedule
      parameters:
      - description: Schedule
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/schedule_service.CreateSchedule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetSchedule'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create schedule
      tags:
      - schedule
  /CreateStudent:
    post:
      consumes:
      - application/json
      description: API for creating student
      parameters:
      - description: Student
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/user_service.CreateStudent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.CreateStudent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create student
      tags:
      - student
  /CreateStudentPayment:
    post:
      consumes:
      - application/json
      description: API for creating student payment
      parameters:
      - description: Student Payment
        in: body
        name: student_payment
        required: true
        schema:
          $ref: '#/definitions/schedule_service.CreateStudentPayment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetStudentPayment'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create student payment
      tags:
      - student_payment
  /CreateStudentTask:
    post:
      consumes:
      - application/json
      description: API for creating student task
      parameters:
      - description: Student Task
        in: body
        name: student_task
        required: true
        schema:
          $ref: '#/definitions/schedule_service.CreateStudentTask'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetStudentTask'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create student task
      tags:
      - student_task
  /CreateSupportTeacher:
    post:
      consumes:
      - application/json
      description: API for creating support teacher
      parameters:
      - description: Support Teacher
        in: body
        name: support_teacher
        required: true
        schema:
          $ref: '#/definitions/user_service.CreateSupportTeacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.CreateSupportTeacher'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create support teacher
      tags:
      - support_teacher
  /CreateTask:
    post:
      consumes:
      - application/json
      description: API for creating task
      parameters:
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/schedule_service.CreateTask'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetTask'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create task
      tags:
      - task
  /CreateTeacher:
    post:
      consumes:
      - application/json
      description: API for creating teacher
      parameters:
      - description: Teacher
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/user_service.CreateTeacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.CreateTeacher'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create teacher
      tags:
      - teacher
  /DeleteAdministration/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a administration by ID
      parameters:
      - description: administration ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.EmptyAdmin'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a administration by ID
      tags:
      - administration
  /DeleteBranch/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a branch by ID
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.EmptyBranch'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a branch by ID
      tags:
      - branch
  /DeleteEvent/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting an event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.EmptyEvent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete an event by ID
      tags:
      - event
  /DeleteEventStudent/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting an event student by ID
      parameters:
      - description: Event Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.EmptyEventStudent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete an event student by ID
      tags:
      - event_student
  /DeleteGroup/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a group by ID
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.EmptyGroup'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a group by ID
      tags:
      - group
  /DeleteJournal/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a journal by ID
      parameters:
      - description: Journal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.EmptyJournal'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a journal by ID
      tags:
      - journal
  /DeleteManager/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a manager by ID
      parameters:
      - description: Manager ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.EmptyManager'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a manager by ID
      tags:
      - manager
  /DeleteSchedule/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a schedule by ID
      parameters:
      - description: Schedule ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.EmptySchedule'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a schedule by ID
      tags:
      - schedule
  /DeleteStudent/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a student by ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.StudentEmpty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a student by ID
      tags:
      - student
  /DeleteStudentPayment/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a student payment by ID
      parameters:
      - description: Student Payment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.EmptyStudentPayment'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a student payment by ID
      tags:
      - student_payment
  /DeleteStudentTask/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a student task by ID
      parameters:
      - description: Student Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.EmptyStudentTask'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a student task by ID
      tags:
      - student_task
  /DeleteSupportTeacher/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a support teacher by ID
      parameters:
      - description: Support Teacher ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.EmptySTeacher'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a support teacher by ID
      tags:
      - support_teacher
  /DeleteTask/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.EmptyTask'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a task by ID
      tags:
      - task
  /DeleteTeacher/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a teacher by ID
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.EmptyTeacher'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a teacher by ID
      tags:
      - teacher
  /EventStudent/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a student with their events by student ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetStudentWithEventsResponse'
        "404":
          description: Student not found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get student with events by student ID
      tags:
      - event_student
  /GetByIdAdministration/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a single administration by ID
      parameters:
      - description: administration ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.Administration'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a single administration by ID
      tags:
      - administration
  /GetByIdBranch/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a single branch by ID
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.Branch'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a single branch by ID
      tags:
      - branch
  /GetByIdEvent/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a single event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetEvent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a single event by ID
      tags:
      - event
  /GetByIdEventStudent/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a single event student by ID
      parameters:
      - description: Event Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetEventStudent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a single event student by ID
      tags:
      - event_student
  /GetByIdGroup/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a single group by ID
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetGroup'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a single group by ID
      tags:
      - group
  /GetByIdManager/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a single manager by ID
      parameters:
      - description: Manager ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.Manager'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a single manager by ID
      tags:
      - manager
  /GetByIdStudent/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a single student by ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.Student'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a single student by ID
      tags:
      - student
  /GetByIdSupportTeacher/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a single support teacher by ID
      parameters:
      - description: Support Teacher ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.SupportTeacher'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a single support teacher by ID
      tags:
      - support_teacher
  /GetByIdTeacher/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a single teacher by ID
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.Teacher'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a single teacher by ID
      tags:
      - teacher
  /GetJournal/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a journal by ID
      parameters:
      - description: Journal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetJournal'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a journal by ID
      tags:
      - journal
  /GetJurnalsStudent/{id}:
    get:
      description: Get a Jurnal entry by Student Group ID
      parameters:
      - description: Student Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetJournal'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a Jurnal by Student Group ID
      tags:
      - journal
  /GetListAdministration:
    get:
      consumes:
      - application/json
      description: API for getting list administration
      parameters:
      - description: administration
        in: query
        name: seller
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.GetListAdministrationResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get List administration
      tags:
      - administration
  /GetListBranch:
    get:
      consumes:
      - application/json
      description: API for getting list of branches
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.GetListBranchResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of branches
      tags:
      - branch
  /GetListEvent:
    get:
      consumes:
      - application/json
      description: API for getting list of events
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetListEventResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of events
      tags:
      - event
  /GetListEventStudent:
    get:
      consumes:
      - application/json
      description: API for getting list of event students
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetListEventStudentResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of event students
      tags:
      - event_student
  /GetListGroup:
    get:
      consumes:
      - application/json
      description: API for getting list of groups
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetListGroupResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of groups
      tags:
      - group
  /GetListJournal:
    get:
      consumes:
      - application/json
      description: API for getting list of journals
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetListJournalResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of journals
      tags:
      - journal
  /GetListManager:
    get:
      consumes:
      - application/json
      description: API for getting list of managers
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.GetListManagerResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of managers
      tags:
      - manager
  /GetListSchedule:
    get:
      consumes:
      - application/json
      description: API for getting list of schedules
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetListScheduleResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of schedules
      tags:
      - schedule
  /GetListStudent:
    get:
      consumes:
      - application/json
      description: API for getting list of students
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.GetListStudentResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of students
      tags:
      - student
  /GetListStudentPayment:
    get:
      consumes:
      - application/json
      description: API for getting list of student payments
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetListStudentPaymentResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of student payments
      tags:
      - student_payment
  /GetListStudentTask:
    get:
      consumes:
      - application/json
      description: API for getting list of student tasks
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetListStudentTaskResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of student tasks
      tags:
      - student_task
  /GetListSupportTeacher:
    get:
      consumes:
      - application/json
      description: API for getting list of support teachers
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.GetListSupportTeacherResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of support teachers
      tags:
      - support_teacher
  /GetListTask:
    get:
      consumes:
      - application/json
      description: API for getting list of tasks
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetListTaskResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of tasks
      tags:
      - task
  /GetListTeacher:
    get:
      consumes:
      - application/json
      description: API for getting list of teachers
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.GetListTeacherResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get list of teachers
      tags:
      - teacher
  /GetSchedule/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a schedule by ID
      parameters:
      - description: Schedule ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetSchedule'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a schedule by ID
      tags:
      - schedule
  /GetScheduleForMonth:
    get:
      consumes:
      - application/json
      description: API for getting schedules for a specific month
      parameters:
      - description: Month Start Date
        in: query
        name: monthStartDate
        required: true
        type: string
      - description: Month End Date
        in: query
        name: monthEndDate
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetListScheduleResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get schedules for a specific month
      tags:
      - schedule
  /GetScheduleForWeek:
    get:
      consumes:
      - application/json
      description: API for getting schedules for a specific week
      parameters:
      - description: Week Start Date
        in: query
        name: weekStartDate
        required: true
        type: string
      - description: Week End Date
        in: query
        name: weekEndDate
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetListScheduleResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get schedules for a specific week
      tags:
      - schedule
  /GetStudentPayment/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a student payment by ID
      parameters:
      - description: Student Payment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetStudentPayment'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a student payment by ID
      tags:
      - student_payment
  /GetStudentTask/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a student task by ID
      parameters:
      - description: Student Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetStudentTask'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a student task by ID
      tags:
      - student_task
  /GetTask/{id}:
    get:
      consumes:
      - application/json
      description: API for getting a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetTask'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a task by ID
      tags:
      - task
  /GroupTeacher/{id}:
    get:
      description: Get Groups associated with a Teacher by Teacher ID
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetListGroupResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Groups by Teacher ID
      tags:
      - group
  /LoginAdmin:
    post:
      consumes:
      - application/json
      description: API for admin login
      parameters:
      - description: Admin credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user_service.LoginPasswors'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.Token'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Admin Login
      tags:
      - login
  /LoginManager:
    post:
      consumes:
      - application/json
      description: API for manager login
      parameters:
      - description: Manager credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user_service.LoginPasswors'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.Token'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Manager Login
      tags:
      - login
  /LoginStudent:
    post:
      consumes:
      - application/json
      description: API for student login
      parameters:
      - description: Student credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user_service.LoginPasswors'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.Token'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Student Login
      tags:
      - login
  /LoginSuperAdmin:
    post:
      consumes:
      - application/json
      description: API for super admin login
      parameters:
      - description: Super Admin credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user_service.LoginPasswors'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.Token'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Super Admin Login
      tags:
      - login
  /LoginSupportTeacher:
    post:
      consumes:
      - application/json
      description: API for support teacher login
      parameters:
      - description: Support Teacher credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user_service.LoginPasswors'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.Token'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Support Teacher Login
      tags:
      - login
  /LoginTeacher:
    post:
      consumes:
      - application/json
      description: API for teacher login
      parameters:
      - description: Teacher credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user_service.LoginPasswors'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.Token'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Teacher Login
      tags:
      - login
  /StudentReportList:
    get:
      consumes:
      - application/json
      description: API for getting a list of students
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: string
      - description: Page
        in: query
        name: page
        required: true
        type: string
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.GetListStudentResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get List of Students
      tags:
      - report
  /SupportTeacherReportList:
    get:
      consumes:
      - application/json
      description: API for getting a list of support teachers
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: string
      - description: Page
        in: query
        name: page
        required: true
        type: string
      - description: Search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.GetListSupportTeacherResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get List of Support Teachers
      tags:
      - report
  /TeacherReportList:
    get:
      consumes:
      - application/json
      description: API for getting a list of teachers
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: string
      - description: Page
        in: query
        name: page
        required: true
        type: string
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.GetReportListTeacherResponse'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get List of Teachers
      tags:
      - report
  /UpdateAdministration/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a administration by ID
      parameters:
      - description: administration ID
        in: path
        name: id
        required: true
        type: string
      - description: Administration
        in: body
        name: seller
        required: true
        schema:
          $ref: '#/definitions/user_service.UpdateAdministration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.UpdateAdministration'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a administration by ID
      tags:
      - administration
  /UpdateBranch/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a branch by ID
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: string
      - description: Branch
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/user_service.UpdateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.UpdateBranch'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a branch by ID
      tags:
      - branch
  /UpdateEvent/{id}:
    put:
      consumes:
      - application/json
      description: API for updating an event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: Event
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/schedule_service.UpdateEvent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.UpdateEvent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update an event by ID
      tags:
      - event
  /UpdateEventStudent/{id}:
    put:
      consumes:
      - application/json
      description: API for updating an event student by ID
      parameters:
      - description: Event Student ID
        in: path
        name: id
        required: true
        type: string
      - description: Event Student
        in: body
        name: event_student
        required: true
        schema:
          $ref: '#/definitions/schedule_service.UpdateEventStudent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.UpdateEventStudent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update an event student by ID
      tags:
      - event_student
  /UpdateGroup/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a group by ID
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      - description: Group
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/schedule_service.UpdateGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.UpdateGroup'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a group by ID
      tags:
      - group
  /UpdateJournal/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a journal by ID
      parameters:
      - description: Journal ID
        in: path
        name: id
        required: true
        type: string
      - description: Journal
        in: body
        name: journal
        required: true
        schema:
          $ref: '#/definitions/schedule_service.UpdateJournal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetJournal'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a journal by ID
      tags:
      - journal
  /UpdateManager/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a manager by ID
      parameters:
      - description: Manager ID
        in: path
        name: id
        required: true
        type: string
      - description: Manager
        in: body
        name: manager
        required: true
        schema:
          $ref: '#/definitions/user_service.UpdateManager'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.UpdateManager'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a manager by ID
      tags:
      - manager
  /UpdateSchedule/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a schedule by ID
      parameters:
      - description: Schedule ID
        in: path
        name: id
        required: true
        type: string
      - description: Schedule
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/schedule_service.UpdateSchedule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetSchedule'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a schedule by ID
      tags:
      - schedule
  /UpdateStudent/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a student by ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      - description: Student
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/user_service.UpdateStudent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.UpdateStudent'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a student by ID
      tags:
      - student
  /UpdateStudentPayment/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a student payment by ID
      parameters:
      - description: Student Payment ID
        in: path
        name: id
        required: true
        type: string
      - description: Student Payment
        in: body
        name: student_payment
        required: true
        schema:
          $ref: '#/definitions/schedule_service.UpdateStudentPayment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetStudentPayment'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a student payment by ID
      tags:
      - student_payment
  /UpdateStudentTask/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a student task by ID
      parameters:
      - description: Student Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Student Task
        in: body
        name: student_task
        required: true
        schema:
          $ref: '#/definitions/schedule_service.UpdateStudentTask'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetStudentTask'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a student task by ID
      tags:
      - student_task
  /UpdateSupportTeacher/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a support teacher by ID
      parameters:
      - description: Support Teacher ID
        in: path
        name: id
        required: true
        type: string
      - description: Support Teacher
        in: body
        name: support_teacher
        required: true
        schema:
          $ref: '#/definitions/user_service.UpdateSupportTeacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.UpdateSupportTeacher'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a support teacher by ID
      tags:
      - support_teacher
  /UpdateTask/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/schedule_service.UpdateTask'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule_service.GetTask'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a task by ID
      tags:
      - task
  /UpdateTeacher/{id}:
    put:
      consumes:
      - application/json
      description: API for updating a teacher by ID
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      - description: Teacher
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/user_service.UpdateTeacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_service.UpdateTeacher'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a teacher by ID
      tags:
      - teacher
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
